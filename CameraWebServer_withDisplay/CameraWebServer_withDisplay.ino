#include "esp_camera.h"
#include <WiFi.h>
#include <U8g2lib.h>
// ===========================
// Select camera model in board_config.h
// ===========================
#include "board_config.h"
static const unsigned char image_WarningDolphinFlip_bits[] PROGMEM = {
 
 0x00,0x00,0x00,0x00,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0x80,0xff,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0x60,0x00,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x18,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x04,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x01,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x80,0x87,0x00,0xc0,0x03,0x04,0x00,0x00,0x00,0x00,0x40,0x58,0x00,0x20,0x04,0x04,0x00,0x00,0x00,0x00,0x20,0x60,0x00,0xd0,0x0b,0x08,0x00,0x00,0x00,0x00,0x20,0x80,0x01,0x68,0x17,0x08,0x00,0x00,0x00,0x00,0xe0,0x01,0x06,0x28,0x17,0x08,0x00,0x00,0x00,0x00,0xc0,0x07,0x18,0xe8,0x17,0x08,0x00,0x00,0x00,0x00,0x80,0x0f,0x00,0xe8,0x17,0x10,0x00,0x00,0x00,0x00,0x00,0x3f,0x00,0xd0,0x0b,0x10,0x00,0x00,0x00,0x00,0x00,0x7e,0x00,0xf0,0x05,0x10,0x00,0x00,0x00,0x00,0x00,0xfc,0x00,0x08,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0xf8,0x01,0x00,0x04,0x10,0x00,0x00,0x00,0x00,0x00,0xf0,0x03,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0xc0,0x3f,0x0c,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x20,0x0f,0x30,0x00,0x0c,0x10,0x00,0x00,0x00,0x00,0x20,0xf0,0xff,0x03,0x12,0x10,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x12,0x30,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x12,0x30,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x12,0x70,0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0xe2,0x61,0x00,0x00,0x00,0x00,0x00,0xf0,0x1f,0x00,0x12,0xe2,0x00,0x00,0x00,0x00,0x00,0xe0,0x07,0x00,0x0e,0xe4,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x09,0xc4,0x01,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x09,0xc5,0x01,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x09,0xc5,0x03,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0xf1,0x84,0x03,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0xe2,0x88,0x03,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x04,0x88,0x03,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x08,0x10,0x03,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x08,0x10,0x03,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x08,0x20,0x03,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x08,0x20,0x02,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x08,0x40,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};
// ===========================
// Enter your WiFi credentials
// ===========================
const char *ssid = "**********";
const char *password = "**********";

//U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);
U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(
  U8G2_R0, /* clock=*/ 14, /* data=*/ 15, /* reset=*/ U8X8_PIN_NONE);

void startCameraServer();
void setupLedFlash();

void setup() {
  Serial.begin(115200);
  Serial.setDebugOutput(true);
  Serial.println();

  //Display
  u8g2.begin();
 


  camera_config_t config;
  config.ledc_channel = LEDC_CHANNEL_0;
  config.ledc_timer = LEDC_TIMER_0;
  config.pin_d0 = Y2_GPIO_NUM;
  config.pin_d1 = Y3_GPIO_NUM;
  config.pin_d2 = Y4_GPIO_NUM;
  config.pin_d3 = Y5_GPIO_NUM;
  config.pin_d4 = Y6_GPIO_NUM;
  config.pin_d5 = Y7_GPIO_NUM;
  config.pin_d6 = Y8_GPIO_NUM;
  config.pin_d7 = Y9_GPIO_NUM;
  config.pin_xclk = XCLK_GPIO_NUM;
  config.pin_pclk = PCLK_GPIO_NUM;
  config.pin_vsync = VSYNC_GPIO_NUM;
  config.pin_href = HREF_GPIO_NUM;
  config.pin_sccb_sda = SIOD_GPIO_NUM;
  config.pin_sccb_scl = SIOC_GPIO_NUM;
  config.pin_pwdn = PWDN_GPIO_NUM;
  config.pin_reset = RESET_GPIO_NUM;
  config.xclk_freq_hz = 20000000;
  config.frame_size = FRAMESIZE_UXGA;
  config.pixel_format = PIXFORMAT_JPEG;  // for streaming
  //config.pixel_format = PIXFORMAT_RGB565; // for face detection/recognition
  config.grab_mode = CAMERA_GRAB_WHEN_EMPTY;
  config.fb_location = CAMERA_FB_IN_PSRAM;
  config.jpeg_quality = 12;
  config.fb_count = 1;

  // if PSRAM IC present, init with UXGA resolution and higher JPEG quality
  //                      for larger pre-allocated frame buffer.
  if (config.pixel_format == PIXFORMAT_JPEG) {
    if (psramFound()) {
      config.jpeg_quality = 10;
      config.fb_count = 2;
      config.grab_mode = CAMERA_GRAB_LATEST;
    } else {
      // Limit the frame size when PSRAM is not available
      config.frame_size = FRAMESIZE_SVGA;
      config.fb_location = CAMERA_FB_IN_DRAM;
    }
  } else {
    // Best option for face detection/recognition
    config.frame_size = FRAMESIZE_240X240;
#if CONFIG_IDF_TARGET_ESP32S3
    config.fb_count = 2;
#endif
  }

#if defined(CAMERA_MODEL_ESP_EYE)
  pinMode(13, INPUT_PULLUP);
  pinMode(14, INPUT_PULLUP);
#endif

  // camera init
  esp_err_t err = esp_camera_init(&config);
  if (err != ESP_OK) {
    Serial.printf("Camera init failed with error 0x%x", err);
    return;
  }

  sensor_t *s = esp_camera_sensor_get();
  // initial sensors are flipped vertically and colors are a bit saturated
  if (s->id.PID == OV3660_PID) {
    s->set_vflip(s, 1);        // flip it back
    s->set_brightness(s, 1);   // up the brightness just a bit
    s->set_saturation(s, -2);  // lower the saturation
  }
  // drop down frame size for higher initial frame rate
  if (config.pixel_format == PIXFORMAT_JPEG) {
    s->set_framesize(s, FRAMESIZE_QVGA);
  }

#if defined(CAMERA_MODEL_M5STACK_WIDE) || defined(CAMERA_MODEL_M5STACK_ESP32CAM)
  s->set_vflip(s, 1);
  s->set_hmirror(s, 1);
#endif

#if defined(CAMERA_MODEL_ESP32S3_EYE)
  s->set_vflip(s, 1);
#endif

// Setup LED FLash if LED pin is defined in camera_pins.h
#if defined(LED_GPIO_NUM)
  setupLedFlash();
#endif

  WiFi.begin(ssid, password);
  WiFi.setSleep(false);

  Serial.print("WiFi connecting");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");

  startCameraServer();

  Serial.print("Camera Ready! Use 'http://");
  Serial.print(WiFi.localIP());
  Serial.println("' to connect");
}

void loop() {

   u8g2.clearBuffer();
   u8g2.setFontMode(1);
   u8g2.setBitmapMode(1);
   u8g2.setFont(u8g2_font_timR24_tr);
   u8g2.drawStr(28, 64, "BOD");

  u8g2.drawXBM(8, 0, 74, 52, image_WarningDolphinFlip_bits);

  u8g2.sendBuffer();

  // Do nothing. Everything is done in another task by the web server
  delay(10000);
}
